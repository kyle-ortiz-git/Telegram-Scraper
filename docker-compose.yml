services:
  # PHP Application (with Apache)
  php-app:
    build: .
    image: k2ortiz/docker:1
    container_name: php-app
    ports:
      - "8085:80"
    env_file:
      - .env
    environment:
      DB_HOST: db
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      AWS_DEFAULT_REGION: ${REGION}
      PYTHONUNBUFFERED: 1
      TELEGRAM_API_ID: ${TELEGRAM_API_ID}
      TELEGRAM_API_HASH: ${TELEGRAM_API_HASH}
    depends_on:
      - db
    restart: always
    volumes:
      - ./app:/var/www/html
      - ./telegram_scraping:/opt/telegram_scraping
    networks:
      - app-network

  # MySQL Database
  #db:
  #  image: mysql:8.0.36
  #  container_name: mysql-db
  #  restart: always
  #  environment:
  #    MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
  #    MYSQL_DATABASE: ${MYSQL_DATABASE}
  #    MYSQL_USER: ${MYSQL_USER}
  #    MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  #  volumes:
  #    - db_data:/var/lib/mysql
  #  networks:
  #    - app-network
  #  healthcheck:
  #    test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
  #    interval: 5s
  #    retries: 10
  #    timeout: 5s
  #    start_period: 10s

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network


networks:
  app-network:
    driver: bridge
