version: "3.9"

services:
  # PHP Application (with Apache)
  php-app:
    build: .                       # Use your local Dockerfile
    image: k2ortiz/docker:1        # Keeps your existing image tag
    container_name: php-app
    ports:
      - "80:80"                    # Serve app on localhost:80

    # Load base environment from .env file
    env_file:
      - .env

    environment:
      DB_HOST: db
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      S3_BUCKET_NAME: ${S3_BUCKET_NAME}
      AWS_DEFAULT_REGION: ${REGION}
      PYTHONUNBUFFERED: 1
      # Telegram credentials 
      TELEGRAM_API_ID: ${TELEGRAM_API_ID}
      TELEGRAM_API_HASH: ${TELEGRAM_API_HASH}

    depends_on:
      - db
    restart: always

    volumes:
      # Mount PHP application
      - ./app:/var/www/html

      # Mount scraper project (so downloads/splits persist locally)
      - ./telegram_scraping:/opt/telegram_scraping


    # Default command runs both Apache and the scraper
    command: >
      bash -c "mkdir -p /opt/telegram_scraping/logs &&
               python3 /opt/telegram_scraping/scraping.py > /opt/telegram_scraping/logs/scraper.log 2>&1 &
               apache2-foreground"

  # MySQL Database
  db:
    image: mysql:8.0.36
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql

  # phpMyAdmin
  phpmyadmin:
    image: phpmyadmin
    container_name: phpmyadmin
    restart: always
    ports:
      - "8081:80"
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
    depends_on:
      - db

volumes:
  db_data:
